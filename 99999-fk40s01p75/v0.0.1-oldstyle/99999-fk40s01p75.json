{
  "metadata": {
    "title": "Icon Array",
    "description": "JavaScript object to generate visual representation of risk scores. To use, create a div with an id=<any id name>, then create a dictionary with the proper values to pass into the draw_array function. Run the function, and the object will draw the visual where you put your div in the html code. NOTE: this knowledge object uses D3.JS, so to use it you have to include a script source to D3",
    "citations": [{
        "citation_title": null,
        "citation_at": null
    }],
    "arkId": {
      "arkId": "ark:/99999/fk40s01p75"
    }
  },
  "inputMessage": "",
  "outputMessage": "",
  "payload": {
    "content": "//divID , count, gridWidth = 10, gridHeight = 10, personFill = \"steelblue\", backgroundFill = \"#FFFFFF\", key=true\nfunction draw_array(instr)\n{\n\t//for drawing svg icon path\n\tvar path = \"M0,0v40h22V0H0z M11,0.732c1.755,0,3.177,1.423,3.177,3.177c0,1.755-1.422,3.177-3.177,3.177\" +\n\t\"c-1.754,0-3.177-1.422-3.177-3.177C7.823,2.155,9.246,0.732,11,0.732z M18.359,11.884v9.851c0,0.763-0.617,1.381-1.381,1.381\" +\n\t\"c-0.763,0-1.381-0.618-1.381-1.381v-8.967h-0.535v0.124v10.224v14.307c0,1.02-0.826,1.848-1.848,1.848\" +\n\t\"c-1.02,0-1.846-0.828-1.846-1.848V23.114h-0.697v14.307H10.63c0,1.021-0.827,1.847-1.847,1.847c-1.021,0-1.847-0.826-1.847-1.847\" +\n\t\"c0-0.134,0.016-0.264,0.043-0.39V23.114H6.937V12.767H6.401v8.967c0,0.763-0.618,1.381-1.381,1.381s-1.38-0.619-1.38-1.383v-9.85\" +\n\t\"v-0.407c0-2.032,1.647-3.679,3.68-3.68h7.362c2.03,0,3.68,1.647,3.68,3.68v0.408H18.359z\";\n\n\tvar personHeight = 39;\n\tvar personWidth = 19;\n\n\t//-----FUNCTIONS-----\n\tvar initialize_svg = function(divID, width, height, maskDecimal)\n\t{\n\t\tvar svgContainer = d3.selectAll(\"#\" + divID).append(\"svg\")\n\t\t\t\t\t\t\t\t.attr(\"fill\", instr.backgroundFill)\n\t                       \t \t.attr(\"width\", width)\n\t                         \t.attr(\"height\", height);\n\n\t\treturn svgContainer;\n\t}\n\n\tvar draw_person = function(svgContainer, fill, path, x, y)\n\t{\n\t\tsvgContainer.append(\"rect\")\n\t\t\t\t\t\t.attr(\"height\", personHeight)\n\t\t\t\t\t\t.attr(\"width\", personWidth)\n\t\t\t\t\t\t.attr(\"fill\", fill)\n\t\t\t.attr(\"transform\", \"translate(\" + x + \", \" + y + \")\");\n\n\t\tsvgContainer.append(\"path\")\n\t\t\t.attr(\"fill\", instr.backgroundFill)\n\t\t\t.attr(\"d\", path)\n\t\t\t.attr(\"transform\", \"translate(\" + x + \", \" + y + \")\");\n\t}\n\n    var draw_partial_person = function(svgContainer, fill, path, x, y, portion)\n    {\n    \t\n    \tsvgContainer.append(\"rect\")\n    \t\t\t\t\t.attr(\"height\", personHeight)\n    \t\t\t\t\t.attr(\"width\", personWidth)\n    \t\t\t\t\t.attr(\"fill\", fill)\n    \t\t\t\t\t.attr(\"transform\", \"translate(\" + x + \", \" + y + \")\");\n\n\t\tsvgContainer.append(\"rect\")\n\t\t\t\t\t\t.attr(\"height\", personHeight * (1 - portion))\n\t\t\t\t\t\t.attr(\"width\", personWidth)\n\t\t\t\t\t\t.attr(\"fill\", \"#cccccc\")\n\t\t\t\t\t\t.attr(\"transform\", \"translate(\" + x + \", \" + y + \")\");\n\n\n\t\tsvgContainer.append(\"path\")\n\t\t\t.attr(\"fill\", instr.backgroundFill)\n\t\t\t.attr(\"d\", path)\n\t\t\t.attr(\"transform\", \"translate(\" + x + \", \" + y + \")\");\n    }\n\n\t//-----BEGIN-----\n\n\n\tvar height = 45 * instr.gridHeight + 29\t;\n\tvar width = 44 * instr.gridWidth;\n\n\tvar decimal = instr.count - Math.floor(instr.count);\n\tif(decimal && decimal < 0.1)\n\t{\n\t\tdecimal = 0.1\n\t}\n\n\tvar partial = (decimal != 0) ? true : false;\n\t//Make an SVG Container\n\tvar svgContainer = initialize_svg(instr.divID, width, height, decimal);\n\t     \n\tvar xDist = 25;\n\tvar yCoord = 0;\n\tvar yDist = 45\n\tvar xCoordMultiplier = 0;\n\n\tvar numGrey = (instr.gridWidth * instr.gridHeight) - Math.ceil(instr.count);\n\tconsole.log(numGrey);\n\n\nvar fillColor = function(j, partial = false)\n{\n\tif(j <= numGrey)\n\t\treturn \"#cccccc\";\n\telse\n\t\treturn instr.personFill;\n}\n\n\nvar c = 1;\n\n\tfor(var i = 0; i < instr.gridHeight; ++i)\n\t{\n\t\tfor(var j = 0; j < instr.gridWidth; ++j, xCoordMultiplier++, c++)\n\t\t{\n\t\t\tif(c > numGrey && partial)\n\t\t\t{\n\t\t\t\tdraw_partial_person(svgContainer, fillColor(c), path, xCoordMultiplier*xDist, yCoord, decimal);\n\t\t\t\tpartial = false;\n\t\t\t}\n\t\t\telse\n\t\t\t\tdraw_person(svgContainer, fillColor(c), path, xCoordMultiplier*xDist, yCoord);\n\t\t}\n\t\txCoordMultiplier = 0;\n\t\tyCoord += yDist;\n\t}\nif(instr.key == true)\n{\n\t\tyCoord += 25;\n\n\t\tvar txt = \"Number of people affected: \" + instr.count;\n\n\t\tdraw_person(svgContainer, fillColor(0), path, instr.gridWidth * xDist + 30, (instr.gridHeight/2 * personHeight) - 44);\n\t\n\t\tsvgContainer.append(\"text\")\n\t\t\t\t\t.attr(\"x\", instr.gridWidth * xDist + 32)\t\n\t\t\t\t\t.attr(\"y\", instr.gridHeight/2 * personHeight + 20)\n\t\t\t\t\t.attr(\"fill\", \"black\")\n\t\t\t\t\t.text(\"Not affected\");\n\n\t\tdraw_person(svgContainer, fillColor(numGrey + 1), path, instr.gridHeight * xDist + 30, instr.gridHeight/2 * personHeight + 44)\n\n\t\tsvgContainer.append(\"text\")\n\t\t\t\t\t.attr(\"x\", instr.gridWidth * xDist + 32)\t\n\t\t\t\t\t.attr(\"y\", instr.gridHeight/2 * personHeight + 110)\n\t\t\t\t\t.attr(\"fill\", \"black\")\n\t\t\t\t\t.text(\"Affected\");\n\t}\n}",
    "engineType": "PYTHON",
    "functionName": ""
  },
  "url": "http://kgrid.med.umich.edu/library2/knowledgeObject/ark:/99999/fk40s01p75",
  "source": "user-generated"
}